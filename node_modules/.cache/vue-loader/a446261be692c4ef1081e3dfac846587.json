{"remainingRequest":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gabriella/Documents/test4/data/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/gabriella/Documents/test4/data/src/App.vue","mtime":1608067370788},{"path":"/Users/gabriella/Documents/test4/data/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmJvZHkgewogICAgZm9udC1mYW1pbHk6ICdBdmVuaXInLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOwogICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogICAgcGFkZGluZzogMDsKICAgIHBhZGRpbmctdG9wOiA4MHB4OwogICAgbWFyZ2luOiAwOwogICAgaDIgewogICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7CiAgICAgICAgYSB7CiAgICAgICAgICAgIGNvbG9yOiBibGFjazsKICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICAgIH0KICAgIH0KICAgICNhcHAgewogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICBjb2xvcjogIzJjM2U1MDsKICAgICAgICAuY29udGVudCB7CiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICAgICAgICBtYXgtd2lkdGg6IDQyMHB4OwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div>\n        <notifications group=\"notifications\"\n                       @click=\"close\"\n                       position=\"top left\">\n            <template slot=\"body\" slot-scope=\"props\">\n                <button @click=\"close\">Button</button>\n                <div>\n                    <a class=\"title\">\n                        {{props.item.title}}\n                    </a>\n                    <a class=\"close\">\n                        <i class=\"fa fa-fw fa-close\"></i>\n                    </a>\n                    <div v-html=\"props.item.text\">\n                    </div>\n                </div>\n            </template>\n        </notifications>\n        <TreeChart :json=\"data\" :class=\"{landscape: landscape.length}\" @click-node=\"clickNode\"/>\n    </div>\n</template>\n\n<script>\n  import TreeChart from \"@/components/TreeChart\";\n  import axios from 'axios';\n\n  export default {\n    name: 'app',\n    components: {\n      TreeChart\n    },\n    data() {\n      const data = [\n        {\n          name: 'A',\n          description: 'This is a description of A',\n          parent: ''\n        },\n        {\n          name: 'B',\n          description: 'This is a description of B',\n          parent: 'A'\n        },\n        {\n          name: 'C',\n          description: 'This is a description of C',\n          parent: 'A'\n        },\n        {\n          name: 'D',\n          description: 'This is a description of D',\n          parent: 'A'\n        },\n        {\n          name: 'B-1',\n          description: 'This is a description of B-1',\n          parent: 'B'\n        },\n        {\n          name: 'B-2',\n          description: 'This is a description of B-2',\n          parent: 'B'\n        },\n        {\n          name: 'B-3',\n          description: 'This is a description of B-3',\n          parent: 'B'\n        }\n      ];\n      const formattedData = this.nest(data);\n      return {\n        landscape: [],\n        data: {\n          name: formattedData[0].name,\n          description: formattedData[0].description,\n          class: [\"rootNode\"],\n          children: formattedData[0].children\n        }\n      };\n    },\n    methods: {\n      clickNode: function (node) {\n        this.$notify({\n          group: 'notifications',\n          title: node.name,\n          text: node.description,\n          onClickClose: true,\n        });\n      },\n      nest(items, name = '', link = 'parent') {\n        return items.filter(item => item[link] === name)\n            .map(item => ({\n              name: item.name,\n              description: item.description,\n              children: this.nest(items, item.name),\n              duration: 100000,\n            }));\n      },\n      close: function () {\n        this.$notify({group: 'notifications', clean: true});\n      }\n    },\n    mounted () {\n      axios.get('http://localhost:5000/api/diagram')\n          .then(response => {\n            console.log(response)\n          })\n          .catch(error => {\n            console.log(error)\n            this.errored = true\n          })\n          .finally(() => this.loading = false)\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    body {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        padding: 0;\n        padding-top: 80px;\n        margin: 0;\n        h2 {\n            font-weight: 300;\n            a {\n                color: black;\n                font-size: 12px;\n            }\n        }\n        #app {\n            text-align: center;\n            color: #2c3e50;\n            .content {\n                margin: 0 auto;\n                max-width: 420px;\n            }\n        }\n    }\n</style>\n"]}]}