{"remainingRequest":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gabriella/Documents/test4/data/src/components/TreeChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gabriella/Documents/test4/data/src/components/TreeChart.vue","mtime":1608104220664},{"path":"/Users/gabriella/Documents/test4/data/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVHJlZUNoYXJ0IiwKICBwcm9wczogWyJqc29uIl0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRyZWVEYXRhOiB7fQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGpzb246IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKFByb3BzKSB7CiAgICAgICAgbGV0IGV4dGVuZEtleSA9IGZ1bmN0aW9uIChqc29uRGF0YSkgewogICAgICAgICAganNvbkRhdGEuZXh0ZW5kID0gKGpzb25EYXRhLmV4dGVuZCA9PT0gdm9pZCAwID8gdHJ1ZSA6ICEhanNvbkRhdGEuZXh0ZW5kKTsKICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGpzb25EYXRhLmNoaWxkcmVuKSkgewogICAgICAgICAgICBqc29uRGF0YS5jaGlsZHJlbi5mb3JFYWNoKGMgPT4gewogICAgICAgICAgICAgIGV4dGVuZEtleShjKQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIGpzb25EYXRhOwogICAgICAgIH0KICAgICAgICBpZiAoUHJvcHMpIHsKICAgICAgICAgIHRoaXMudHJlZURhdGEgPSBleHRlbmRLZXkoUHJvcHMpOwogICAgICAgIH0KICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB0b2dnbGVFeHRlbmQ6IGZ1bmN0aW9uICh0cmVlRGF0YSkgewogICAgICB0cmVlRGF0YS5leHRlbmQgPSAhdHJlZURhdGEuZXh0ZW5kOwogICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgfSwKICB9Cn0K"},{"version":3,"sources":["TreeChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TreeChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <table class=\"diagram\" v-if=\"treeData.name\">\n        <tr>\n            <td class=\"diagram-cell\" :colspan=\"Array.isArray(treeData.children) ? treeData.children.length * 2 : 1\"\n                :class=\"{parentLevel: Array.isArray(treeData.children) && treeData.children.length,\n                    extend: Array.isArray(treeData.children) && treeData.children.length && treeData.extend}\">\n                <div :class=\"{node: true, [treeData.class]: true}\">\n                    <div class=\"diagram-item\"\n                         :class=\"Array.isArray(treeData.class) ? treeData.class : []\"\n                         @click=\"$emit('click-node', treeData)\">\n                        <div class=\"name\">{{treeData.name}}</div>\n                    </div>\n                </div>\n                <div class=\"extend_handle\" v-if=\"Array.isArray(treeData.children) && treeData.children.length\"\n                     @click=\"toggleExtend(treeData)\"></div>\n            </td>\n        </tr>\n        <tr v-if=\"Array.isArray(treeData.children) && treeData.children.length && treeData.extend\">\n            <td :class=\"['childLevel', 'diagram-cell'] \"\n                v-for=\"(children, index) in treeData.children\"\n                :key=\"index\"\n                colspan=\"2\">\n                <TreeChart :json=\"children\" @click-node=\"$emit('click-node', $event)\"/>\n            </td>\n        </tr>\n    </table>\n</template>\n\n<script>\n  export default {\n    name: \"TreeChart\",\n    props: [\"json\"],\n    data() {\n      return {\n        treeData: {}\n      }\n    },\n    watch: {\n      json: {\n        handler: function (Props) {\n          let extendKey = function (jsonData) {\n            jsonData.extend = (jsonData.extend === void 0 ? true : !!jsonData.extend);\n            if (Array.isArray(jsonData.children)) {\n              jsonData.children.forEach(c => {\n                extendKey(c)\n              })\n            }\n            return jsonData;\n          }\n          if (Props) {\n            this.treeData = extendKey(Props);\n          }\n        },\n        immediate: true\n      }\n    },\n    methods: {\n      toggleExtend: function (treeData) {\n        treeData.extend = !treeData.extend;\n        this.$forceUpdate();\n      },\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    .diagram {\n        border-collapse: separate !important;\n        border-spacing: 0 !important;\n\n        .diagram-cell {\n            position: relative;\n            vertical-align: top;\n            padding: 0 0 50px 0;\n            text-align: center;\n\n            .node {\n                cursor: pointer;\n                position: relative;\n                display: inline-block;\n                margin: 0 1em;\n                box-sizing: border-box;\n                text-align: center;\n                border-radius: 0px 10px;\n                border: #cccccc 1px solid;\n\n                .diagram-item {\n                    width: 200px;\n                    height: 100px;\n\n                    .name {\n                        padding: 16px;\n                    }\n                }\n            }\n\n            .selected {\n                border: #2e776d 1px solid;\n            }\n\n            .extend_handle {\n                position: absolute;\n                left: 50%;\n                bottom: 30px;\n                width: 10px;\n                height: 10px;\n                padding: 10px;\n                transform: translate3d(-15px, 0, 0);\n                cursor: pointer;\n\n                &:before {\n                    content: \"\";\n                    display: block;\n                    width: 100%;\n                    height: 100%;\n                    box-sizing: border-box;\n                    border: 2px solid;\n                    border-color: #ccc #ccc transparent transparent;\n                    transform: rotateZ(135deg);\n                    transform-origin: 50% 50% 0;\n                    transition: transform ease 300ms;\n                }\n\n                &:hover:before {\n                    border-color: #333 #333 transparent transparent;\n                }\n            }\n\n            .extend .extend_handle:before {\n                transform: rotateZ(-45deg);\n            }\n\n            .extend::after {\n                content: \"\";\n                position: absolute;\n                left: 50%;\n                bottom: 15px;\n                height: 15px;\n                border-left: 2px solid #ccc;\n                transform: translate3d(-1px, 0, 0)\n            }\n\n        }\n    }\n\n\n    .childLevel {\n        &::before {\n            content: \"\";\n            position: absolute;\n            left: 50%;\n            bottom: 100%;\n            height: 15px;\n            border-left: 2px solid #ccc;\n            transform: translate3d(-1px, 0, 0)\n        }\n\n        &::after {\n            content: \"\";\n            position: absolute;\n            left: 0;\n            right: 0;\n            top: -15px;\n            border-top: 2px solid #ccc;\n        }\n\n        &:first-child:before, .childLevel:last-child:before {\n            display: none;\n        }\n\n        &:first-child:after {\n            left: 50%;\n            height: 15px;\n            border: 2px solid;\n            border-color: #ccc transparent transparent #ccc;\n            border-radius: 6px 0 0 0;\n            transform: translate3d(1px, 0, 0)\n        }\n\n        &:last-child:after {\n            right: 50%;\n            height: 15px;\n            border: 2px solid;\n            border-color: #ccc #ccc transparent transparent;\n            border-radius: 0 6px 0 0;\n            transform: translate3d(-1px, 0, 0)\n        }\n\n        &:first-child.childLevel:last-child::after {\n            left: auto;\n            border-radius: 0;\n            border-color: transparent #ccc transparent transparent;\n            transform: translate3d(1px, 0, 0)\n        }\n    }\n\n    .landscape {\n        transform: translate(-100%, 0) rotate(-90deg);\n        transform-origin: 100% 0;\n    }\n\n    .landscape .node {\n        text-align: left;\n        height: 8em;\n        width: 8em;\n    }\n</style>\n\n"]}]}