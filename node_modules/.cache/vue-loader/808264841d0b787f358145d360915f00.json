{"remainingRequest":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gabriella/Documents/test4/data/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/gabriella/Documents/test4/data/src/App.vue","mtime":1608046688923},{"path":"/Users/gabriella/Documents/test4/data/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabriella/Documents/test4/data/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgICBmb250LWZhbWlseTogJ0F2ZW5pcicsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBjb2xvcjogIzJjM2U1MDsKICAgIG1hcmdpbi10b3A6IDYwcHg7Cn0KCiNhcHAgLmF2YXQgewogICAgYm9yZGVyLXJhZGl1czogMmVtOwogICAgYm9yZGVyLXdpZHRoOiAycHg7Cn0KCiNhcHAgLm5hbWUgewogICAgZm9udC13ZWlnaHQ6IDcwMDsKfQoKI2FwcCAucm9vdE5vZGUgLm5hbWUgewogICAgY29sb3I6IHJlZDsKfQoKLmZvb3QgewogICAgcG9zaXRpb246IGZpeGVkOwogICAgbGVmdDogMDsKICAgIGJvdHRvbTogMDsKICAgIHdpZHRoOiAxMDAlOwogICAgYmFja2dyb3VuZDogIzMzMzsKICAgIHBhZGRpbmc6IDI0cHg7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgY29sb3I6ICM5OTk7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5mb290IGEgewogICAgY29sb3I6ICNmZmY7CiAgICBtYXJnaW46IDAgLjVlbQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <TreeChart :json=\"data\" :class=\"{landscape: landscape.length}\" @click-node=\"clickNode\"/>\n</template>\n\n<script>\n  import TreeChart from \"@/components/TreeChart\";\n\n  export default {\n    name: 'app',\n    components: {\n      TreeChart\n    },\n    data() {\n      const data = [\n        {\n          name: 'A',\n          description: 'This is a description of A',\n          parent: ''\n        },\n        {\n          name: 'B',\n          description: 'This is a description of B',\n          parent: 'A'\n        },\n        {\n          name: 'C',\n          description: 'This is a description of C',\n          parent: 'A'\n        },\n        {\n          name: 'D',\n          description: 'This is a description of D',\n          parent: 'A'\n        },\n        {\n          name: 'B-1',\n          description: 'This is a description of B-1',\n          parent: 'B'\n        },\n        {\n          name: 'B-2',\n          description: 'This is a description of B-2',\n          parent: 'B'\n        },\n        {\n          name: 'B-3',\n          description: 'This is a description of B-3',\n          parent: 'B'\n        }\n      ];\n      const formattedData = this.nest(data);\n      return {\n        landscape: [],\n        data: {\n          name: formattedData[0].name,\n          description: formattedData[0].description,\n          class: [\"rootNode\"],\n          children: formattedData[0].children\n        }\n      };\n    },\n    methods: {\n      clickNode: function (node) {\n        this.$notify({\n          group: 'notifications',\n          title: node.name,\n          text: node.description,\n          close: true,\n        });\n      },\n     close: function(){this.$notify({group: 'notifications', clean: true})},\n      nest(items, name = '', link = 'parent') {\n        return items.filter(item => item[link] === name)\n            .map(item => ({\n              name: item.name,\n              description: item.description,\n              children: this.nest(items, item.name)\n            }));\n      }\n    }\n  }\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        margin-top: 60px;\n    }\n\n    #app .avat {\n        border-radius: 2em;\n        border-width: 2px;\n    }\n\n    #app .name {\n        font-weight: 700;\n    }\n\n    #app .rootNode .name {\n        color: red;\n    }\n\n    .foot {\n        position: fixed;\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        background: #333;\n        padding: 24px;\n        overflow: hidden;\n        color: #999;\n        font-size: 14px;\n        text-align: center;\n    }\n\n    .foot a {\n        color: #fff;\n        margin: 0 .5em\n    }\n</style>\n"]}]}